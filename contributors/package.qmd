---
title: pyOpenSci Package Metrics Over Time
jupyter: python3
execute:
  echo: false
---

This data provides metrics accross all the PyOpenSci packages. 

```{python}
#| echo: false
#|
import ast
import warnings
from itables import show
from pathlib import Path

import altair as alt
import pandas as pd

# This is a local module that stores the plot theme
from pyosmetrics.plot_theme import load_poppins_font, register_and_enable_poppins_theme

pd.options.mode.chained_assignment = None
pd.options.future.infer_string = True

# Suppress all warnings
warnings.filterwarnings("ignore")

# Load the & register Poppins theme
load_poppins_font()
register_and_enable_poppins_theme()
```

```{python}
# Get the current notebook directory
package_data_path = Path.cwd().parents[0] / "_data" / "package_data.csv" 

# Read the DataFrame from the CSV file
package_df = pd.read_csv(package_data_path)
```

### Forks count per repositories

```{python}
# Parse the "gh_meta" column back into dictionaries
package_df['gh_meta'] = package_df['gh_meta'].apply(
  lambda x: ast.literal_eval(x) if isinstance(x, str) else x
)

# Extract "forks_count" value from the 'gh_meta' column
package_df['forks_count'] = package_df['gh_meta'].apply(
  lambda x: x.get('forks_count') if isinstance(x, dict) else None
)
```


```{python}
# Render a graph plot of the forks count
chart = (
    alt.Chart(package_df).mark_bar()
    .encode(
        x=alt.X('package_name', sort='-y')
            .title('Package name')
            .axis(labelAngle=45),
        y=alt.Y('forks_count:Q')
            .title('Forks Count'),
    )
    .properties(title="Forks Count per Repository")
    .configure_legend(
        orient='top',
        titleAnchor='middle',
        direction='horizontal',
        labelFontSize=5,
    )
    .interactive()
)

chart
```

Find bellow the detailed count for each PyOpenSci repository.

```{python}
# Create an itable to display the DataFrame
from itables import show

# Display the results as an interactive table
show(package_df[['package_name', 'forks_count']], max_rows=10)
```